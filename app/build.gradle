apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 'android-Q'
    buildToolsVersion "29.0.0 rc1"
    defaultConfig {
        applicationId "com.fueledbycaffeine.gofccyourself"
        minSdkVersion 'Q'
        targetSdkVersion 'Q'
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    lintOptions {
        textReport true
        textOutput 'stdout'
        lintConfig rootProject.file('lint.xml')

        checkDependencies true
        checkTestSources true
        explainIssues false

        // We run a full lint analysis as build part in CI, so skip vital checks for assemble task.
        checkReleaseBuilds false
    }

    dexOptions {
        preDexLibraries true
    }

    signingConfigs {
        debug {
            storeFile file("$rootProject.projectDir/keystores/debug.keystore")
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
        release {
            def password = getPassword(defaultConfig.applicationId)
            storeFile file("$rootProject.projectDir/keystores/release.keystore")
            storePassword password
            keyAlias 'app'
            keyPassword password
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            shrinkResources false
            signingConfig signingConfigs.debug
        }
        release {
            minifyEnabled true
            shrinkResources true
            debuggable false
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.core:core-ktx:1.0.1'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.preference:preference-ktx:1.1.0-alpha04'
    implementation 'pub.devrel:easypermissions:3.0.0'
    implementation 'com.jakewharton.timber:timber:4.7.1'
    implementation 'com.google.android.material:material:1.0.0'

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'
}

def getPassword(String item) {
    if (System.getenv('ANDROID_KEYSTORE_PASSWORD') != null) {
        System.getenv("ANDROID_KEYSTORE_PASSWORD")
    } else {
        def stdout = new ByteArrayOutputStream()
        def stderr = new ByteArrayOutputStream()
        exec {
            commandLine 'security', '-q', 'find-generic-password', '-s', item, '-w'
            standardOutput = stdout
            errorOutput = stderr
            ignoreExitValue true
        }
        //noinspection GroovyAssignabilityCheck
        stdout.toString().trim()
    }
}
